<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>轻松打造自己的Cheat Engine</title>
      <link href="/2019/05/17/%E8%BD%BB%E6%9D%BE%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84Cheat-Engine/"/>
      <url>/2019/05/17/%E8%BD%BB%E6%9D%BE%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84Cheat-Engine/</url>
      
        <content type="html"><![CDATA[<h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h3><p>Cheat Engine不用我多介绍了吧，不知道的百度吧……….</p><h3 id="2-起因"><a href="#2-起因" class="headerlink" title="2.起因"></a>2.起因</h3><p>因为最近到了网瘾少年之沉迷游戏的阶段，玩某些网游时需要使用网瘾少年之游戏难度降低(W)工(G)具,所以需要用CE对游戏内存进行搜索，找一些基址做网瘾少年应该做的事情，然而刚运行官方的CE没多久，我的帐号已经违反某游玩家协议被封号了，我嘞个去，不能忍，就有了这篇文章，好了不吹了…………</p><h3 id="3-正文"><a href="#3-正文" class="headerlink" title="3.正文"></a>3.正文</h3><p>这篇文章将会带大家轻松修改一款属于自己的CE修改器，很简单，不懂编程都能轻松编译，所有需要用到的资源我都会放在文章最后。</p><p>首先，下载并解压CE6.4的源代码，再下载 lazarus v1.4.4并安装，安装，安装，重要事情说三遍，记得安装，注意版本，我试过1.6的编译会出错，虽然改改代码也能通过，但就违背了我们轻松的原则了。</p><p>其实这里才是正文…..哈哈哈</p><p>进入到CE源代码解压目录\CheatEngine64src\Cheat Engine里面</p><p>找到cheatengine.lpi</p><p><img src="https://img-blog.csdn.net/20180205142032995?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>然后就会看到许多混乱的界面</p><p><img src="https://img-blog.csdn.net/20180205142231521?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>差不多就这样吧，接下来我们来改一下标题和图标，点lazarus左上角的search-&gt;Find in Files，然后在弹出来的搜索框里输入MainUnit2 ,记得选上where里面的search all files in project，然后开始Find。</p><p><img src="https://img-blog.csdn.net/20180205142504849?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>找到下图这样的结果，双击</p><p><img src="https://img-blog.csdn.net/20180205142729226?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>然后会弹出源码界面</p><p><img src="https://img-blog.csdn.net/20180205142802276?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>这里的Own Cheat Engine 6.6.6就是我们的CE程序名</p><p>然后还有修改一下版本信息，这里可以按快捷键Shift+Ctrl+F11</p><p><img src="https://img-blog.csdn.net/20180205143012573?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>然后在弹出的界面中修改CE的标题和加载我们自己的图标，最后点Version info</p><p><img src="https://img-blog.csdn.net/20180205143113386?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>点了Version info以后</p><p><img src="https://img-blog.csdn.net/20180205150516778?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>都改完以后，按Shift+F9或者</p><p><img src="https://img-blog.csdn.net/20180205150607615?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>点这build</p><p>然后等待编译完成，就会看到CheatEngine64src\Cheat Engine\bin里面有一个我们图标的cheatengine-i386.exe</p><p><img src="https://img-blog.csdn.net/20180205150711163?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p><img src="https://img-blog.csdn.net/20180205150823238?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>好了，运行看看效果</p><p><img src="https://img-blog.csdn.net/20180205150851967?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>大功告成，最后给我们编译出来的CE加个VMP壳，大小就会变成4m大小，然后其他游戏一般都检测不出来，至于加壳工具，自行百度吧，还有要改其他功能的话，就要自己去研究一下了，这里说不了那么多。</p><p><strong>下次再写一篇修改CE语言的文章，不用直接在源码里面翻译。</strong></p><p>CE6.4源码: <a href="https://download.csdn.net/download/zhaobisheng1/10240414" target="_blank" rel="noopener">https://download.csdn.net/download/zhaobisheng1/10240414</a></p><p>lazarus v1.4.4:自行百度</p>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>geth控制台发布智能合约以及调用操作</title>
      <link href="/2019/05/17/geth%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%91%E5%B8%83%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E4%BB%A5%E5%8F%8A%E8%B0%83%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/05/17/geth%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%91%E5%B8%83%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E4%BB%A5%E5%8F%8A%E8%B0%83%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>部署智能合约流程：</p><p>1.solidity在线编译</p><p>2.进入geth控制台</p><p>3.部署智能合约</p><p>4.调用测试</p><p>首先，打开在线编译网站，编译一下你的智能合约，然后我们需要获取两段代码，</p><p>先复制这段ABI代码到一个记事本放着</p><p><img src="https://img-blog.csdn.net/20180522193417238?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p><p>然后复制这段代码到控制台里面运行，</p><p><img src="https://img-blog.csdn.net/20180522192802194?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p><p>之后就可以在控制台看到</p><p><img src="https://img-blog.csdn.net/20180522192845468?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p><p>说明这个token的地址是：0xd5653ba53edfc318f88044a141e9575345a9ee81</p><p>不过要等eth的区块确认：0x6de112fda659cbe9e9b9c2aa7b316c7623a437711de4583d72d1251332d19d7d 这笔交易以后才生效，可以到 myetherWallet网站 这个网站查询交易情况</p><p><img src="https://img-blog.csdn.net/20180522193127530?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p><p>当交易确认后，这个合约就算是部署成功了</p><p>接下来我们调用测试一下</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">myAccount=eth.accounts[0];<br>contractAddres=&quot;上面部署合约返回的地址&quot;;<br><br>abi=[&#123;xxxx&#125;]<br><br>//abi就算上面最早复制的一段代码<br><br>myContract=eth.contract(abi).at(contractAddres);<br><br>//然后myContract.xxx();就能调用合约里面的函数了，例如我的getBalance()<br>myContract.getBalance(myAccount);<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx简单笔记</title>
      <link href="/2019/05/17/Nginx%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/17/Nginx%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>nginx + php-fpm配置方式:</p><p>server {</p><pre><code>    listen       80;    server_name  xxx.xxx.com;    root /www/wwwroot;    index index.php index.html;    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {    }    location ~ \.php$ {       fastcgi_pass   127.0.0.1:9000;       fastcgi_index  index.php;       fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;       include        fastcgi_params;   }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><p>设置反向代理:</p><p>server {<br>listen       80;<br>server_name  xxx.xxx.com;<br>location / {<br>proxy_pass <a href="http://localhost:802" target="_blank" rel="noopener">http://localhost:802</a>;<br>proxy_set_header   Host    $host;<br>proxy_set_header   X-Real-IP   $remote_addr;<br>proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;<br>    } </p><p>}</p><p>开启简单的http代理:</p><p>server {<br>    resolver 8.8.8.8;<br>    resolver_timeout 5s;</p><pre><code>listen 0.0.0.0:8088;location / {    proxy_pass $scheme://$host$request_uri;   proxy_set_header Host $http_host;    proxy_buffers 256 4k;    proxy_max_temp_file_size 0;    proxy_connect_timeout 30;     proxy_cache_valid 200 302 10m;    proxy_cache_valid 301 1h;    proxy_cache_valid any 1m;}</code></pre><p>}</p>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单写写华软mysise教务系统模拟登陆+获取课程表数据(打造自己的超级课程表)</title>
      <link href="/2019/05/17/%E7%AE%80%E5%8D%95%E5%86%99%E5%86%99%E5%8D%8E%E8%BD%AFmysise%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86-%E8%8E%B7%E5%8F%96%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%95%B0%E6%8D%AE-%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E8%B6%85%E7%BA%A7%E8%AF%BE%E7%A8%8B%E8%A1%A8/"/>
      <url>/2019/05/17/%E7%AE%80%E5%8D%95%E5%86%99%E5%86%99%E5%8D%8E%E8%BD%AFmysise%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86-%E8%8E%B7%E5%8F%96%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%95%B0%E6%8D%AE-%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E8%B6%85%E7%BA%A7%E8%AF%BE%E7%A8%8B%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>##主要介绍一下华软mysise教务系统模拟登陆+简单获取数据</p><p>#####最近比较多朋友问到这个，很多事情很难口头说的清楚，还是那句话好:「Talk is cheap,Show me the code」,如果你看完这篇文章，还不能理解mysise的模拟登录过程，那恕小弟表达能力不太够吧！！！</p><h3 id="模拟登陆的过程"><a href="#模拟登陆的过程" class="headerlink" title="模拟登陆的过程:"></a>模拟登陆的过程:</h3><ul><li>首先分析一下登录页面<a href="http://class.sise.com.cn:7001/sise/login.jsp的表单" target="_blank" rel="noopener">http://class.sise.com.cn:7001/sise/login.jsp的表单</a><br>  <img src="http://img.blog.csdn.net/20171225003950385?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></li></ul><pre><code><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">&lt;form name=&quot;form1&quot; method=&quot;post&quot; action=&quot;login_check_login.jsp&quot;&gt;<br>&lt;input type=&quot;hidden&quot; name=&quot;888af9dd5a2c154b78e9bd65747b2a7b&quot;  value=&quot;8c4251f32f3bd68c2aa22f538b0b533e&quot;&gt;<br>&lt;input id=&quot;random&quot;   type=&quot;hidden&quot;  value=&quot;1514133455194&quot;  name=&quot;random&quot; /&gt;<br>&lt;input id=&quot;token&quot;  type=&quot;hidden&quot; name=&quot;token&quot; /&gt;<br> &lt;div&gt; &lt;a href=&quot;/sise/coursetemp/courseInfo.html&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;2017-2018学年2学期 排课信息查看&lt;/b&gt;&lt;/a&gt;&lt;/div&gt;&lt;!--<br>&lt;div&gt;&lt;font size=&quot;2&quot; color=&quot;#006666&quot;&gt;学号：&lt;/font&gt;&lt;input name=&quot;username&quot; id=&quot;username&quot; type=&quot;text&quot; size=&quot;15&quot; class=&quot;notnull&quot; onkeypress=&quot;goNext()&quot; &gt;&lt;/div&gt;<br>&lt;div&gt;&lt;font size=&quot;2&quot; color=&quot;#006666&quot;&gt;密码：&lt;/font&gt;&lt;input name=&quot;password&quot; id=&quot;password&quot; type=&quot;password&quot; size=&quot;15&quot; class=&quot;notnull&quot; onkeypress=&quot;Check_Nums()&quot; &gt;&lt;/div&gt;<br>&lt;div&gt;&lt;input type=&quot;button&quot; id=&quot;Submit&quot; name=&quot;Submit&quot; value=&quot; 登  录 &quot; class=&quot;button&quot; onclick=&quot;loginwithpwd();&quot; onmouseover=&quot;this.style.color=&apos;red&apos;&quot; onmouseout=&quot;this.style.color=&apos;#1e7977&apos;&quot;&gt;&lt;input type=&quot;button&quot; id=&quot;Submit2&quot; name=&quot;Submit2&quot;  value=&quot; 重  写 &quot; class=&quot;button&quot; onclick=&quot;resetWin();&quot; onmouseover=&quot;this.style.color=&apos;red&apos;&quot; onmouseout=&quot;this.style.color=&apos;#1e7977&apos;&quot;&gt;&lt;/div&gt;<br>&lt;/form&gt;<br></code></pre></td></tr></table></figure></code></pre><ul><li>由于写这篇文章时还是选课期间，所以多了一个<code>排课信息查看</code>，然而现在的mysise登录页面表单里也多了一个<code>token</code>和<code>random</code> 要post过去，虽然搞了一会解密了<code>token</code> 是<code>random</code>+<code>JSESSIONID</code> 值md5后混合的，但我大一时模拟登录用的旧数据格式还能用，就不详细说了,姑且命名它为新的登录方式，下面代码里面有生成<code>token</code> 的过程。</li><li>好了，现在来分析登陆过程，我们到底传了怎样的数据过去mysise,先抓包一波看看：<figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs undefined">POST /sise/login_check_login.jsp HTTP/1.1<br>Host: class.sise.com.cn:7001<br>Content-Length: 182<br>Cache-Control: max-age=0<br>Origin: http://class.sise.com.cn:7001<br>Upgrade-Insecure-Requests: 1<br>Content-Type: application/x-www-form-urlencoded<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8<br>Referer: http://class.sise.com.cn:7001/sise/login.jsp<br>Accept-Language: zh-CN,zh;q=0.9<br>Cookie: JSESSIONID=y28vh1XPx0mplcym62G5nGCBFNSfwrJf1yvS1PdhG1dPjQ7GJQ1r!-2087883253<br>Connection: close<br><br>888af9dd5a2c154b78e9bd65747b2a7b=8c4251f32f3bd68c2aa22f538b0b533e&amp;random=1514133455194&amp;token=5155F144B17333B4852571992468DC49247C2ED10A6EC&amp;username=学号&amp;password=密码<br></code></pre></td></tr></table></figure></li></ul><p><img src="http://img.blog.csdn.net/20171225005251919?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><p>我们来简单分析一波， <code>888af9dd5a2c154b78e9bd65747b2a7b=8c4251f32f3bd68c2aa22f538b0b533e</code>这串东西是不是好像在那看到过？？？没错，就是在首页表单里面的隐藏项里，<code>888af9dd5a2c154b78e9bd65747b2a7b</code> 和 <code>8c4251f32f3bd68c2aa22f538b0b533e</code>长度都是32位，眉头皱了一下，发现<code>888af9dd5a2c154b78e9bd65747b2a7b</code>是我本地ip的md5值，而<code>8c4251f32f3bd68c2aa22f538b0b533e</code>就是我本机ip+sise的md5值。<code>random=1514133455194&amp;token=5155F144B17333B4852571992468DC49247C2ED10A6EC</code> 这串东东我大一刚来的时候是没有的，现在还能登录，那就可以不要了。<code>username=学号&amp;password=密码</code>这个不多说。<br><code>POST /sise/login_check_login.jsp</code> 说明是post方式把数据传到<code>/sise/login_check_login.jsp</code>这个页面。</p></li><li><p>好了，知道原理了，下面来代码模拟登陆，这里选用PHP(Java什么的同理的，没有语言黑！！！)</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs undefined">&lt;?php<br>//mysiselogin.php<br>class Mysise_Login &#123;<br>    private $username;<br>    private $password;<br>    private $myIp;<br>    private $normalMode; //模式，1是构造旧的登陆数据包,2是构造新的登陆数据包<br>    private $url = &quot;http://class.sise.com.cn:7001/sise/&quot;;<br>    private $cookie = &apos;&apos;;<br>    private $random = &apos;&apos;;<br>    public function __construct($user, $passwd, $ip, $mode = 1) &#123;<br>        $this-&gt;username = $user;<br>        $this-&gt;password = $passwd;<br>        $this-&gt;myIp = $ip;<br>        $this-&gt;normalMode = $mode;<br>    &#125; <br><br>    public function get_post_data() &#123;<br>        $ipmd5 = md5($this-&gt;myIp);<br>        $ipsisemd5 = md5(md5($this-&gt;myIp) . &quot;sise&quot;);<br>        $datas = $ipmd5 . &quot;=&quot; . $ipsisemd5;<br>        if ($this-&gt;normalMode == 1) &#123;<br>            $datas .= &quot;&amp;username=&quot; . $this-&gt;username . &quot;&amp;password=&quot; . $this-&gt;password;<br>        &#125; else if ($this-&gt;normalMode == 2) &#123;<br>            $token=$this-&gt;getToken();<br>            $datas .= &quot;&amp;random=&quot; . $this-&gt;random . &quot;&amp;token=&quot; . $token . &quot;&amp;username=&quot; . $this-&gt;username . &quot;&amp;password=&quot; . $this-&gt;password;<br>        &#125; <br>        return $datas;<br>    &#125; <br><br>    private function getToken() &#123;<br>        $content = $this-&gt;getResponse();<br>        $preg_name = &quot;/JSESSIONID=(.*?)!/&quot;;<br>        preg_match_all($preg_name, $content, $cookie_info);<br>        $this-&gt;cookie = $cookie_info[1][0];<br>        <br>        $preg_name = &quot;/&lt;input id=\&quot;random\&quot;   type=\&quot;hidden\&quot;  value=\&quot;(.*?)\&quot;  name=\&quot;random\&quot; \/&gt;/&quot;;<br>        preg_match_all($preg_name, $content, $random_info);<br>        $this-&gt;random = $random_info[1][0];<br><br>        $value = strtoupper(md5($this-&gt;url . $this-&gt;cookie . $this-&gt;random));<br>        $len = strlen($value);<br>        $randomlen = strlen($this-&gt;random);<br>        $token = &apos;&apos;;<br>        for($index = 0;$index &lt; $len;$index++) &#123;<br>            $token .= $value[$index];<br>            if ($index &lt; $randomlen) $token .= $this-&gt;random[$index];<br>        &#125; <br>        return $token;<br>    &#125; <br><br>    private function getResponse() &#123;<br>        $ch = curl_init($this-&gt;url);<br>        curl_setopt($ch, CURLOPT_HEADER, true); //返回头信息<br>        curl_setopt($ch, CURLOPT_NOBODY, false); //<br>        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); //返回数据<br>        $content = curl_exec($ch); //执行并存储结果<br>        curl_close($ch);<br>        return $content;<br>    &#125; <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>当调用get_post_data函数时，根据实例化Mysise_Login 类时，传入的mode变量生成并返回登陆数据格式。</p></li><li>好了，根据生成的数据包，我们来模拟登录一下，先放上模拟登录的函数代码，再放上调用代码。</li></ul><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs undefined">//utils.php<br>&lt;?php<br>class Utils &#123;<br>    public static $loginUrl = &quot;http://class.sise.com.cn:7001/sise/login_check_login.jsp&quot;; //登录url<br>    public static $schedularUrl = &quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;; //课程表url<br>    public static function login_post($url, $cookie, $post) &#123;<br>        $curl = curl_init(); //初始化curl模块 <br>        curl_setopt($curl, CURLOPT_URL, $url); //登录提交的地址 <br>        curl_setopt($curl, CURLOPT_HEADER, false); //是否显示头信息 <br>        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); //是否自动显示返回的信息 <br>        curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie); //<br>        curl_setopt($curl, CURLOPT_POST, true); //post方式提交 <br>        curl_setopt($curl, CURLOPT_POSTFIELDS, $post); //要提交的信息 <br>        $rs = curl_exec($curl); //执行cURL <br>        curl_close($curl); //关闭cURL资源，并且释放系统资源 <br>        return $rs;<br>    &#125; <br><br>    public static function get_content($url, $cookie) &#123;<br>        $ch = curl_init();<br>        curl_setopt($ch, CURLOPT_URL, $url); //定义地址<br>        curl_setopt($ch, CURLOPT_HEADER, false); //显示头信息<br>        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); //跟随转跳<br>        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //以数据流返回，是<br>        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); //读取cookie  <br>        // curl_setopt($ch, CURLOPT_COOKIE, $cookie);//设置cookie<br>        $rs = curl_exec($ch); //执行cURL抓取页面内容<br>        curl_close($ch);<br>        return $rs;<br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>下面是整个模拟登录过程的代码</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs undefined">//index.php<br>&lt;?php<br>require_once(&apos;mysiselogin.php&apos;);<br>require_once(&apos;utils.php&apos;);<br><br>$cookie = dirname(__FILE__).&apos;/cookie.txt&apos;;<br><br>$login = new Mysise_Login(学号,密码,你的电脑ip);<br><br>//$login = new Mysise_Login(&apos;学号,密码,你的电脑ip,2);//新的登录方式<br><br>$datas= $login-&gt;get_post_data();<br><br>Utils::login_post(Utils::$loginUrl,$cookie,$datas);<br><br> header(&quot;Content-type: text/html; charset=gb2312&quot;); <br>//因为Mysise的网页编码是GBK的，所以直接显示要声明一下，不然浏览器输出会乱码<br> echo  Utils::get_content(Utils::$schedularUrl,$cookie);<br></code></pre></td></tr></table></figure></li><li><p>如果操作正确的话，这时候访问index.php，已经可以看到课程表的数据了<br><img src="http://img.blog.csdn.net/20171225020049132?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li></ul><ul><li>是不是这样的课表跟我们平时看mysise差不多，一点都没有自己的风格？那么下面随意写一下正则获取各个数据的代码，然后我们就可以发邮件提示你啊，微信机器人提示啊什么的(自行想象吧)……</li></ul><p><img src="http://img.blog.csdn.net/20171225031757144?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li>就这样，课程表数据就获取成功了(正则写的快死了，早知道不用正则了…….)</li></ul><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs undefined">&lt;?php<br><br>function get_schedular($content) &#123;<br>    $content = iconv(&apos;GBK&apos;, &apos;UTF-8&apos;, $content);<br>    $preg_name = &quot;/&lt;td width=\&quot;70%\&quot; nowrap&gt;\&lt;span class=\&quot;style15\&quot;&gt;&amp;nbsp;\&lt;span class=\&quot;style16\&quot;&gt;(.*?) &amp;nbsp;姓名:(.*?) &amp;nbsp;年级:(.*?) &amp;nbsp;专业:(.*?)&lt;\/span&gt; &lt;\/span&gt;&lt;\/td&gt;/&quot;;<br>    preg_match_all($preg_name, $content, $name_info);<br>    $stu = array();<br>    $stu[&apos;stuNumber&apos;] = $name_info[1][0];<br>    $stu[&apos;stuName&apos;] = $name_info[2][0];<br>    $stu[&apos;stugrade&apos;] = $name_info[3][0];<br>    $stu[&apos;stuMajor&apos;] = $name_info[4][0];<br><br>    echo &quot;&lt;br/&gt;学生信息:&quot;;<br>    print_r($stu);<br><br>    echo &quot;&lt;br/&gt;教学周:&quot;;<br><br>    preg_match_all(&quot;/(教学周: 第(.*?)周)/&quot;, $content, $teach_time);<br><br>    $stu_now_week = $teach_time[2][0];<br><br>    echo $stu_now_week;<br><br>    echo &quot;&lt;br/&gt;课程时间安排:&lt;br/&gt;&quot;;<br><br>    $preg_time = &quot;/&lt;td width=&apos;10%&apos; align=&apos;center&apos; valign=&apos;top&apos; class=&apos;font12&apos;&gt;(.*?)节&lt;br&gt;(.*?)&lt;\/td&gt;&lt;td width=&apos;10%&apos; align=&apos;left&apos; valign=&apos;top&apos; class=&apos;font12&apos;&gt;/&quot;;<br>    preg_match_all($preg_time, $content, $schooltime);<br><br>    $class_time = array();<br><br>    $class_time[&apos;time_num&apos;] = count($schooltime[2]); //获取有多少个时间段，注释的是之前以为12:30-13:50是休息时间需要跳过，但现在好多在线课都在12:30-13:50，所以正常获取了<br>    for($num = 0;$num &lt; $class_time[&apos;time_num&apos;];$num++) &#123;<br>        /**<br>         * if ($num == 2) &#123;<br>         * continue;<br>         * &#125;<br>         */<br>        $class_time[] = $schooltime[2][$num];<br>        echo $schooltime[2][$num] ;<br>        /**<br>         * if ($num &gt; 2) &#123;<br>         * $num1 = $num;<br>         * &#125; else &#123;<br>         * $num1 = $num + 1;<br>         * &#125;<br>         */<br>        $num1 = $num + 1;<br>        echo &quot;   第:&quot; . $num1 . &quot;节&lt;br/&gt;&quot;;<br>    &#125; <br><br>    echo &quot;&lt;br/&gt;&lt;pre&gt;&quot;;<br><br>    $preg = &quot;/&lt;td width=&apos;10%&apos; align=&apos;left&apos; valign=&apos;top&apos; class=&apos;font12&apos;&gt;(.*?)&lt;\/td&gt;/si&quot;;<br>    preg_match_all($preg, $content, $arr);<br><br>    $subject = array();<br>    static $vline = 0;<br>    static $hline = 1;<br>    $arr_size = count($arr[1]);<br>    for($subject_count = 0;$subject_count != $arr_size;$subject_count++) &#123;<br>        if ($hline &gt; 7) &#123;<br>            $hline = 1;<br>            $vline += 1;<br>        &#125; <br><br>        $subject[$hline][$vline] = $arr[1][$subject_count];<br>        if ($arr[1][$subject_count] != &quot;&amp;nbsp;&quot;) &#123;<br>            $class_content = $subject[$hline][$vline];<br><br>            $preg_hz = &quot;/[\x&#123;4e00&#125;-\x&#123;9fa5&#125;a-zA-Z 0-9]&#123;2,&#125;\(/u&quot;;<br>            preg_match_all($preg_hz, $class_content, $class_name_info);<br>            $class_name = substr($class_name_info[0][0], 0, strlen($class_name_info[0][0])-1); //课程名称<br>            $preg_name = &quot;/\((.*?)\)/&quot;;<br>            preg_match_all($preg_name, $class_content, $class_details);<br>            $preg_hz = &quot;/[\x&#123;4e00&#125;-\x&#123;9fa5&#125;a-zA-Z0-9]&#123;2,&#125;/u&quot;;<br>            preg_match_all($preg_hz, $class_details[1][0], $hz);<br><br>            echo &quot;&lt;br/&gt;&quot;;<br>            $class_learn_class = $hz[0][0]; //教学班<br>            $class_teacher = $hz[0][1]; //任课老师<br>            echo &quot;教学班:&quot; . $class_learn_class . &quot;&lt;br/&gt;&quot;; <br>            // echo $class_name . &quot;&amp;nbsp;&quot; . $class_teacher . &quot;&lt;br/&gt;&quot;;<br>            echo &quot;课程名称:&quot; . $class_name . &quot;&lt;br/&gt;&quot;;<br>            echo &quot;任课老师:&quot; . $class_teacher . &quot;&lt;br/&gt;&quot;;<br><br>            $preg = &quot;/(\ \d+)&#123;1,&#125;/&quot;;<br>            preg_match_all($preg, $class_details[1][0], $src_arr);<br><br>            $preg_name = &quot;/(\d+)&#123;1,&#125;/&quot;;<br>            preg_match_all($preg_name, $src_arr[0][0], $arr1);<br><br>           <br><br>            $WeekNum = count($arr1[0]) - 1;<br>            $class_weeks = null;<br>            for($num = 0;$num &lt;= $WeekNum;$num++) &#123;<br>                $class_weeks .= $arr1[0][$num] . &quot;,&quot;;<br>            &#125; <br>            $preg_name = &quot;/\[(.*?)\]/&quot;;<br>            preg_match_all($preg_name, $class_details[1][0], $class_room_info);<br>            $class_room = $class_room_info[1][0];<br>            $which_class = $vline + 1;<br>            echo &quot;&lt;br/&gt;星期&quot; . $hline . &quot; 第&quot; . $which_class . &quot;节&lt;br/&gt;&quot;;           <br>            echo &quot;&lt;br/&gt;课室:&quot; . $class_room . &quot;&lt;br/&gt;&quot;;<br>            $all_WeekNum = $WeekNum + 1;<br>            echo &quot;&lt;br/&gt;一共&quot; . $all_WeekNum . &quot;周&lt;br/&gt;&quot;;<br>            print_r($arr1[0]);<br><br>            echo &quot;&lt;br/&gt;&quot;;<br>        &#125; <br>        $hline += 1;<br>    &#125; <br>&#125; <br><br>?&gt;<br></code></pre></td></tr></table></figure><h3 id="说点什么"><a href="#说点什么" class="headerlink" title="说点什么:"></a><strong>说点什么</strong>:</h3><ul><li>如果结合公众号什么的，还可以弄出更多便利的东西，我就懒的搞了，想获取考试时间表啊，考勤信息啊什么鬼的，自己根据<code>http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp</code> 页面获取链接，再提取数据吧。(逃</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows源码编译PHP7.1</title>
      <link href="/2019/05/17/windows%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91PHP7-1/"/>
      <url>/2019/05/17/windows%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91PHP7-1/</url>
      
        <content type="html"><![CDATA[<h3 id="因为最近在研究PHP内核以及需要写一些PHP拓展，而且windows上关于php7-x源码编译安装的资料比较少，所以整合一下，这篇东西就出来了。"><a href="#因为最近在研究PHP内核以及需要写一些PHP拓展，而且windows上关于php7-x源码编译安装的资料比较少，所以整合一下，这篇东西就出来了。" class="headerlink" title="因为最近在研究PHP内核以及需要写一些PHP拓展，而且windows上关于php7.x源码编译安装的资料比较少，所以整合一下，这篇东西就出来了。"></a>因为最近在研究PHP内核以及需要写一些PHP拓展，而且windows上关于php7.x源码编译安装的资料比较少，所以整合一下，这篇东西就出来了。</h3><p>本文章所使用到的工具:</p><ul><li><p><strong><a href="http://windows.php.net/downloads/releases/php-7.1.11-src.zip" target="_blank"> [ php-7.1.11-src.zip (php7.11源码)]</a></strong></p></li><li><p><strong><a href="http://windows.php.net/downloads/php-sdk/php-sdk-binary-tools-20110915.zip" target="_blank"> [ php-sdk-binary-tools-20110915.zip(flex_bison for php)]</a></strong></p></li><li><p><strong><a href="http://windows.php.net/downloads/php-sdk/deps-7.1-vc14-x64.7z" target="_blank"> [ deps-7.1-vc14-x64.7z(编译32位的请下载x86版本)]</a></strong></p></li><li><p><strong><a href="https://www.python.org/downloads/" target="_blank"> [安装python]</a></strong></p></li><li><p><strong>[visual studio 2015]</strong></p></li></ul><hr><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><ul><li><p><strong>1、</strong> C盘创建一个 <code>Build</code>文件夹</p></li><li><p><strong>2、</strong> 下载安装python，并把bin文件夹加入到环境变量path</p></li><li><p><strong>3、</strong> 下载好 php-7.1.11-src.zip、php-sdk-binary-tools-20110915.zip和deps-7.1-vc14-x64.7z</p></li><li><p><strong>4、</strong> 把php-sdk-binary-tools-20110915.zip解压到<code>Build</code>文件夹里面，将bin目录加入到环境变量path中，进入bin目录 <code>cd cd C:\Build\bin</code> 并在<code>phpsdk_buildtree.bat</code>里面<code>GOTO EXIT</code>之前加上VC14的支持：</p></li></ul><p>   MD %<em>%\vc14\x86\deps\bin<br>MD %</em>%\vc14\x86\deps\lib<br>MD %<em>%\vc14\x86\deps\include<br>MD %</em>%\vc14\x64\deps\bin<br>MD %<em>%\vc14\x64\deps\lib<br>MD %</em>%\vc14\x64\deps\include</p><p><img src="http://img.blog.csdn.net/20171101172624810?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p> 然后执行<code>phpsdk_setvars.bat</code>和<code>phpsdk_buildtree.bat ..\phpdev</code> 查看<code>phpdev</code>文件夹已生成。</p><p><img src="http://img.blog.csdn.net/20171101171421084?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171101171839595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><strong>5、</strong> 把deps-7.1-vc14-x64.7z解压到<code>C:\Build\phpdev\vc14\x64</code> ,再把php-7.1.11-src.zip解压到 <code>C:\Build\phpdev\vc14\x64</code>并改名为php7 (注：如果要编译32位，把x64改成x86)，之后在<code>C:\Build\phpdev\vc14\x64</code>目录下新建一个<code>myphp7</code>文件夹</li></ul><p><img src="http://img.blog.csdn.net/20171101173051242?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><p><strong>6、</strong>    从windows菜单列表找到<code>VS2015 x64 本机工具命令提示符</code>并打开（注：如果要编译32位的，则需进入VS2015 x86 本机工具命令提示符）</p></li><li><p><strong>7、</strong>    进入php源码目录下 <code>cd C:\Build\phpdev\vc14\x64\php7</code> ,执行 <code>buildconf</code>后查看是否已生成<code>configure.js</code></p></li><li><p><img src="http://img.blog.csdn.net/20171101173402202?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li><li><p><strong>8、</strong>   执行</p></li></ul><p>configure –disable-all –enable-cli  –enable-hash –enable-session –without-gd –with-bz2    –enable-sockets –enable-object-out-dir=..\myphp7 </p><p><img src="http://img.blog.csdn.net/20171101173522678?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><strong>9、</strong>   最后执行<code>nmake</code>，经过漫长的等待之后在<code>myphp7</code>目录下会生成一个<code>Release_TS</code>,然后在里面找到php.exe就算成功了。</li></ul><p><img src="http://img.blog.csdn.net/20171101173702430?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="好去处"><a href="#好去处" class="headerlink" title="好去处"></a>好去处</h3><ul><li><p><strong><a href="http://lancelot.blog.51cto.com/393579/1772931" target="_blank"> [PHP 7下编译memcache扩展]</a></strong></p></li><li><p><strong><a href="http://windows.php.net/downloads/php-sdk/" target="_blank"> [SDK下载地址]</a></strong></p></li><li><p><strong><a href="http://windows.php.net/downloads/releases/" target="_blank"> [PHP各版本源码下载]</a></strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS下PHP7安装Phalcon3.x</title>
      <link href="/2019/05/17/CentOS%E4%B8%8BPHP7%E5%AE%89%E8%A3%85Phalcon3-x/"/>
      <url>/2019/05/17/CentOS%E4%B8%8BPHP7%E5%AE%89%E8%A3%85Phalcon3-x/</url>
      
        <content type="html"><![CDATA[<p>php7的安装不再复述，自行百度，这里只是写个笔记，记录PHP7安装Phalcon的过程。</p><p><strong>PHP7.x安装Phalcon没有像之前PHP5.6那样，直接源码编译就行了 </strong><br><strong>现在要先安装一个Zephir </strong><br>安装链接：<a href="https://docs.zephir-lang.com/en/latest/install.html#installing-zephir" target="_blank" rel="noopener">https://docs.zephir-lang.com/en/latest/install.html#installing-zephir</a></p><p>然后就是说一下安装过程</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git clone http://github.com/phalcon/cphalcon<br></code></pre></td></tr></table></figure><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">cd ./cphalcon/build<br></code></pre></td></tr></table></figure><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">./install  --php-config /usr/local/php7/bin/php-config  --phpize /usr/local/php7/bin/phpize<br></code></pre></td></tr></table></figure><p>耐心等待编译完成，出现跟下图差不多的就是已经编译成功了，出错就要自己根据提示弄了….</p><p><img src="http://img.blog.csdn.net/20171122151751071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhb2Jpc2hlbmcx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="编译完成"></p><p>最后在 PHP.ini 加入</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">extension=phalcon.so<br></code></pre></td></tr></table></figure><p>OK，搞定收工！</p><p>注：<br>如果编译时出 <code>configure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.</code> </p><p>可以执行 yum install re2c -y  </p>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下安装比特币矿池p2pool笔记</title>
      <link href="/2019/05/17/Linux%E4%B8%8B%E5%AE%89%E8%A3%85%E6%AF%94%E7%89%B9%E5%B8%81%E7%9F%BF%E6%B1%A0p2pool%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/17/Linux%E4%B8%8B%E5%AE%89%E8%A3%85%E6%AF%94%E7%89%B9%E5%B8%81%E7%9F%BF%E6%B1%A0p2pool%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="Linux-ubuntu-centOS-下安装比特币矿池p2pool笔记"><a href="#Linux-ubuntu-centOS-下安装比特币矿池p2pool笔记" class="headerlink" title="Linux(ubuntu/centOS)下安装比特币矿池p2pool笔记"></a>Linux(ubuntu/centOS)下安装比特币矿池p2pool笔记</h4><p>##RHEL系列：</p><p>###安装bitcoin钱包:</p><ul><li><p>rpm方式:<br><code>rpm -ivh http://linux.ringingliberty.com/bitcoin/el6/x86_64/bitcoin-release-1-6.noarch.rpm</code><br><code>yum install bitcoin-server</code> </p></li><li><p>创建 bitcoin.conf:<br><code>vi ~/.bitcoin/bitcoin.conf</code>  </p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">rpcuser=RPC帐号<br>rpcpassword=RPC密码<br>server=1<br>rpcallowip=127.0.0.1<br>rpcport=8332<br>port=8333<br></code></pre></td></tr></table></figure></li></ul><ul><li>立刻运行bitcoind:<br>  RHEL 7: Run:<code>systemctl start bitcoin</code><br>   RHEL 6: Run<code>chkconfig bitcoin on</code></li><li>查看bitcoind运行信息:<code>bitcoin-cli getinfo</code> </li><li><p>设置bitcoind开机运行:</p><p>   根据系统版本<br>:   RHEL 6: Run<code>chkconfig bitcoin on</code><br>:   RHEL 7: Run:<code>systemctl enable bitcoin</code> </p></li><li><p>查看运行状态：</p></li><li><code>tail -f ~/.bitcoin/debug.log</code></li></ul><p>##安装矿池程序p2pool：</p><ul><li><p>安装pyhton2.7环境(方法太多，随便写点):<br><code>wget http://www.python.org/ftp/python/2.7.3/Python-2.7.3.tgz -P /opt</code><br><code>tar xvf Python-2.7.3.tgz</code><br><code>./configure</code><br><code>make &amp;&amp; make install</code></p></li><li><p>pip安装zope.interface:<br><code>sudo pip install zope.interface</code></p></li><li><p>安装Twisted：<br><code>easy_install Twisted</code></p></li><li><p>资源地址:<br>zope.interface:<code>http://pypi.python.org/packages/source/z/zope.interface/zope.interface-4.0.1.tar.gz</code><br>rpm安装zope.interface:<code>http://rpmfind.net/linux/rpm2html/search.php?query=python-zope-interface</code><br>twisted:<code>http://twistedmatrix.com/Releases/Twisted/12.1/Twisted-12.1.0.tar.bz</code></p></li><li><p>从git获取的p2pool:<br><code>git clone https://github.com/forrestv/p2pool.git</code><br>没git的<code>yum install git</code></p></li></ul><ul><li>启动矿池:<br><code>cd p2pool</code><br><code>python run_p2pool.py rpc帐号 rpc密码 -a 钱包地址 --bitcoind-address 127.0.0.1 --net bitcoin --fee 0 --give-author 0 --no-bugreport --outgoing-conns 6</code></li></ul><p>##ubuntu系统：</p><p>###安装bitcoin钱包:<br><code>sudo wget https://bitcoin.org/bin/bitcoin-core-0.15.1/bitcoin-0.15.1-x86_64-linux-gnu.tar.gz</code><br><code>sudo tar -xzf bitcoin-0.15.1-x86_64-linux-gnu.tar.gz</code><br><code>sudo cp bitcoin-0.15.1/bin/* /usr/bin</code></p><ul><li><p>创建 bitcoin.conf:<br><code>sudo vi ~/.bitcoin/bitcoin.conf</code>  </p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">rpcuser=RPC帐号<br>rpcpassword=RPC密码<br>server=1<br>rpcallowip=127.0.0.1<br>rpcport=8332<br>port=8333<br></code></pre></td></tr></table></figure></li><li><p>后台运行bitcoin钱包:<br><code>sudo bitcoind -daemon</code></p></li><li><p>查看运行状态：<br><code>sudo tail -f ~/.bitcoin/debug.log</code></p></li></ul><p>##安装矿池程序p2pool：</p><ul><li><p>安装pyhton2.7环境:<br><code>sudo apt-get install python-zope.interface python-twisted python-twisted-web git python-dev</code><br><code>sudo apt-get install libpython2.7-stdlib</code></p></li><li><p>获取p2pool程序:<br><code>sudo git clone https://github.com/forrestv/p2pool.git</code></p></li><li><p>后台启动矿池：<br>SSH连接的终端需要用到screen: <code>sudo apt-get install screen</code><br><code>cd p2pool</code><br><code>screen -dmS myp2pool python run_p2pool.py rpc用户名 rpc密码 -a 钱包地址 --bitcoind-address 127.0.0.1 --net bitcoin --fee 0 --give-author 0 --no-bugreport --outgoing-conns 6</code></p></li><li><p>查看矿池:<br><code>screen -r myp2pool</code></p></li></ul><p>##注：钱包不更新区块链数据包的，自己运行<br><code>bitcoind server</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用GO编译一个可以在openwrt上运行的http_server程序(在路由器上运行)</title>
      <link href="/2019/05/17/%E7%94%A8GO%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%9C%A8openwrt%E4%B8%8A%E8%BF%90%E8%A1%8C%E7%9A%84http-server%E7%A8%8B%E5%BA%8F-%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/05/17/%E7%94%A8GO%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%9C%A8openwrt%E4%B8%8A%E8%BF%90%E8%A1%8C%E7%9A%84http-server%E7%A8%8B%E5%BA%8F-%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="用GO编译一个可以在openwrt上运行的http-server程序"><a href="#用GO编译一个可以在openwrt上运行的http-server程序" class="headerlink" title="用GO编译一个可以在openwrt上运行的http_server程序"></a>用GO编译一个可以在openwrt上运行的http_server程序</h4><p>做个笔记，用GO编译一个路由器上可用的微型http_server程序：</p><p>GO语言比较新的版本都已经支持mipsle架构了，只需要在系统中定义两个系统变量就行编译</p><hr><p>###具体步骤</p><p><strong>各个系统的编译方法</strong>：<br>1.Windows</p><blockquote><p> set GOOS=linux<br> set GOARCH=mipsle<br> go build http_server.go</p></blockquote><p>2.Linux/Uinx</p><blockquote><p>env GOOS=linux GOARCH=mipsle  go build http_server.go</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><p>网上找了找,再根据自己需要改的代码：<br><figure class="hljs highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs golang"><span class="hljs-comment">// http_server project main.go</span><br><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">"io/ioutil"</span><br><span class="hljs-string">"log"</span><br><span class="hljs-string">"net/http"</span><br><span class="hljs-string">"os"</span><br><span class="hljs-string">"path/filepath"</span><br><span class="hljs-string">"strings"</span><br>)<br><br><span class="hljs-keyword">var</span> (<br>port    = <span class="hljs-string">"66"</span>  <span class="hljs-comment">//默认端口</span><br>wwwroot = <span class="hljs-string">"www"</span> <span class="hljs-comment">//网站根目录</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>startHTTP()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">startHTTP</span><span class="hljs-params">()</span></span> &#123;<br>mux := http.NewServeMux()<br>mux.HandleFunc(<span class="hljs-string">"/"</span>, IndexHandler)<br>log.Println(<span class="hljs-string">"HTTP Server Listening to 0.0.0.0: "</span> + port)<br>server := &amp;http.Server&#123;Addr: <span class="hljs-string">"0.0.0.0:"</span> + port, Handler: mux&#125;<br>err := server.ListenAndServe()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatal(<span class="hljs-string">"ListenAndServe: "</span>, err.Error())<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">IndexHandler</span><span class="hljs-params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;<br>path := r.URL.Path<br><span class="hljs-keyword">if</span> path == <span class="hljs-string">"/"</span> &#123;<br>w.Header().Set(<span class="hljs-string">"content-Type"</span>, <span class="hljs-string">"text/html"</span>)<br>content := getHtmlFile(<span class="hljs-string">"index.html"</span>)<br>w.Write([]<span class="hljs-keyword">byte</span>(content))<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> strings.Contains(path[<span class="hljs-number">1</span>:], <span class="hljs-string">".html"</span>) &#123;<br>w.Header().Set(<span class="hljs-string">"content-Type"</span>, <span class="hljs-string">"text/html"</span>)<br>&#125;<br><span class="hljs-keyword">if</span> strings.Contains(path[<span class="hljs-number">1</span>:], <span class="hljs-string">".css"</span>) &#123;<br>w.Header().Set(<span class="hljs-string">"content-Type"</span>, <span class="hljs-string">"text/css"</span>)<br>&#125;<br><span class="hljs-keyword">if</span> strings.Contains(path[<span class="hljs-number">1</span>:], <span class="hljs-string">".js"</span>) &#123;<br>w.Header().Set(<span class="hljs-string">"Content-Type"</span>, <span class="hljs-string">"text/javascript"</span>)<br>&#125;<br>content := getHtmlFile(path[<span class="hljs-number">1</span>:])<br>w.Write([]<span class="hljs-keyword">byte</span>(content))<br>&#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getHtmlFile</span><span class="hljs-params">(path <span class="hljs-keyword">string</span>)</span> <span class="hljs-params">(fileHtml <span class="hljs-keyword">string</span>)</span></span> &#123;<br>dir, _ := filepath.Abs(filepath.Dir(os.Args[<span class="hljs-number">0</span>]))<br>realPath := dir + <span class="hljs-string">"/"</span> + wwwroot + <span class="hljs-string">"/"</span> + path<br><span class="hljs-keyword">if</span> PathExists(realPath) &#123;<br>file, err := os.Open(realPath)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><span class="hljs-keyword">defer</span> file.Close()<br>fileContent, _ := ioutil.ReadAll(file)<br>fileHtml = <span class="hljs-keyword">string</span>(fileContent)<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fileHtml = <span class="hljs-string">"404 page not found"</span><br>&#125;<br><br><span class="hljs-keyword">return</span> fileHtml<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">PathExists</span><span class="hljs-params">(path <span class="hljs-keyword">string</span>)</span> <span class="hljs-title">bool</span></span> &#123;<br>_, err := os.Stat(path)<br><span class="hljs-keyword">if</span> err == <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">if</span> os.IsNotExist(err) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure></p><p>  <strong>GO就是这么干净利落，主要声明两个系统变量就行了，GO支持一下的系统架构搭配</strong></p><ul><li></li></ul><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$GOOS       $GOARCH<br>   android     arm<br>   darwin      386<br>   darwin      amd64<br>   darwin      arm<br>   darwin      arm64<br>   dragonfly   amd64<br>   freebsd     386<br>   freebsd     amd64<br>   freebsd     arm<br>   linux       386<br>   linux       amd64<br>   linux       arm<br>   linux       arm64<br>   linux       ppc64<br>   linux       ppc64le<br>   linux       mips<br>   linux       mipsle<br>   linux       mips64<br>   linux       mips64le<br>   netbsd      386<br>   netbsd      amd64<br>   netbsd      arm<br>   openbsd     386<br>   openbsd     amd64<br>   openbsd     arm<br>   plan9       386<br>   plan9       amd64<br>   solaris     amd64<br>   windows     386<br>   windows     amd64<br></code></pre></td></tr></table></figure><p><strong>以后就可以编写更多方便的小工具运行在路由器上面了…..</strong></p><ul><li><p>参考链接1: <a href="https://studygolang.com/articles/12109?fr=sidebar" target="_blank" rel="noopener">https://studygolang.com/articles/12109?fr=sidebar</a></p></li><li><p>参考链接2: <a href="https://www.cnblogs.com/jiashengmei/p/6371096.html" target="_blank" rel="noopener">https://www.cnblogs.com/jiashengmei/p/6371096.html</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL出现:ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing</title>
      <link href="/2019/05/17/MYSQL%E5%87%BA%E7%8E%B0-ERROR-1820-HY000-You-must-reset-your-password-using-ALTER-USER-statement-before-executing/"/>
      <url>/2019/05/17/MYSQL%E5%87%BA%E7%8E%B0-ERROR-1820-HY000-You-must-reset-your-password-using-ALTER-USER-statement-before-executing/</url>
      
        <content type="html"><![CDATA[<h4 id="Mysql安装完成后登录无论什么操作都错误"><a href="#Mysql安装完成后登录无论什么操作都错误" class="headerlink" title="Mysql安装完成后登录无论什么操作都错误"></a>Mysql安装完成后登录无论什么操作都错误</h4><hr><h4 id="刚刚安装完成MYSQL，登录进去以后，什么操作都提示错误"><a href="#刚刚安装完成MYSQL，登录进去以后，什么操作都提示错误" class="headerlink" title="刚刚安装完成MYSQL，登录进去以后，什么操作都提示错误"></a>刚刚安装完成MYSQL，登录进去以后，什么操作都提示错误</h4><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181128113649691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==,size_16,color_FFFFFF,t_70" alt="错误截图"></p><hr><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p><strong>这是说明我们的初始密码时间过期了，重新改一下密码就行</strong></p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">alter user user() identified by &quot;你的新密码&quot;;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql: [ERROR] Unknown suffix &#39;?&#39; used for variable &#39;port&#39; (value &#39;3306?&#39;) 解决方法</title>
      <link href="/2019/05/17/mysql-ERROR-Unknown-suffix-used-for-variable-port-value-3306-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2019/05/17/mysql-ERROR-Unknown-suffix-used-for-variable-port-value-3306-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="某天发现个奇怪的mysql错误"><a href="#某天发现个奇怪的mysql错误" class="headerlink" title="某天发现个奇怪的mysql错误"></a>某天发现个奇怪的mysql错误</h3><hr><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h4><ul><li>MYSQL连接时出现以下错误： </li></ul><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">mysql: [ERROR] Unknown suffix &apos;?&apos; used for variable &apos;port&apos; (value &apos;3306?&apos;)<br>mysql: [ERROR] mysql: Error while setting value &apos;3306?&apos; to &apos;port&apos;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181128114734979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW9iaXNoZW5nMQ==,size_16,color_FFFFFF,t_70" alt="错误截图"></p><hr><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li><strong>把my.cnf里面的[client]下的<code>port=3306</code> 删除掉，或者在前面加个#</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang中MongoDB的between查询</title>
      <link href="/2019/05/17/golang%E4%B8%ADMongoDB%E7%9A%84between%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/05/17/golang%E4%B8%ADMongoDB%E7%9A%84between%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="最近在使用GO语言操作MongoDB的时候发现挺多操作很麻烦"><a href="#最近在使用GO语言操作MongoDB的时候发现挺多操作很麻烦" class="headerlink" title="最近在使用GO语言操作MongoDB的时候发现挺多操作很麻烦"></a><strong>最近在使用GO语言操作MongoDB的时候发现挺多操作很麻烦</strong></h4><h4 id="由于判断时间戳或者数值在两个数范围内这个查询很常见，然而mgo实现between查询的资料又很少，所以做一下记录"><a href="#由于判断时间戳或者数值在两个数范围内这个查询很常见，然而mgo实现between查询的资料又很少，所以做一下记录" class="headerlink" title="由于判断时间戳或者数值在两个数范围内这个查询很常见，然而mgo实现between查询的资料又很少，所以做一下记录"></a>由于判断时间戳或者数值在两个数范围内这个查询很常见，然而mgo实现between查询的资料又很少，所以做一下记录</h4><hr><ul><li><p>mgo的安装: <code>go get gopkg.in/mgo.v2</code></p></li><li><p>获取时间戳在上一小时内的记录</p></li></ul><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs undefined">//其他代码太多,只给出主要代码<br><br>func main()&#123;<br>var result []dataStruct<br>lastHourStart := LastHourStartTimestamp()<br>lastHourEnd := LastHourEndTimestamp()<br><br>//关键就是bson.M&#123;&quot;timestamp&quot;: bson.M&#123;&quot;$lte&quot;: lastHourEnd, &quot;$gte&quot;: lastHourStart&#125;&#125;<br><br>err := c.Find(bson.M&#123;&quot;timestamp&quot;: bson.M&#123;&quot;$lte&quot;: lastHourEnd, &quot;$gte&quot;: lastHourStart&#125;&#125;).All(&amp;result)<br><br>CheckErr(err)<br>fmt.Println(result[0], &quot;\r\n&quot;)<br>fmt.Println(result[1], &quot;\r\n&quot;)<br>&#125;<br>//这个函数获取的是当前的整点时间戳<br>func LastHourEndTimestamp() int64 &#123;<br>now := time.Now()<br>timestamp := now.Unix() - int64(now.Second()) - int64((60 * now.Minute()))<br>return timestamp<br>&#125;<br>//这个函数获取的是上一小时整点时间戳<br>func LastHourStartTimestamp() int64 &#123;<br>now := time.Now()<br>timestamp := now.Unix() - int64(now.Second()) - int64((60 * now.Minute())) - 3600<br>return timestamp<br>&#125;<br><br>func CheckErr(err error) &#123;<br>if err != nil &#123;<br>panic(err)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mysql索引的笔记</title>
      <link href="/2019/05/17/%E5%85%B3%E4%BA%8EMysql%E7%B4%A2%E5%BC%95%E7%9A%84%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/17/%E5%85%B3%E4%BA%8EMysql%E7%B4%A2%E5%BC%95%E7%9A%84%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="索引的作用"><a href="#索引的作用" class="headerlink" title="索引的作用"></a>索引的作用</h1><ul><li>主要是根据字段设置了索引以后，可以提高查询速度，也可以防止重复记录插入。</li><li>关联多字段，与已存在记录对比相同不允许重复插入</li></ul><h2 id="如何添加索引"><a href="#如何添加索引" class="headerlink" title="如何添加索引"></a>如何添加索引</h2><ul><li><strong>普通索引</strong>: table_name为表名,index_name为索引名,column_name为字段名<figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">ALTER TABLE  `table_name`  ADD   INDEX index_ name (`column_name`);<br></code></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>唯一索引</strong>:table_name为表名,index_name为索引名,column_name1为字段名1,<strong>唯一索引的字段名可以选择多个，变成组合索引，新插入的记录与已存在的记录对比，必须是唯一索引里面的字段都相同，才是报重复插入的错误！</strong><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">ALTER TABLE  `table_name`  ADD  UNIQUE index_ name (`column_name1`,`column_name2`,...);<br></code></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>删除索引</strong><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">ALTER TABLE  `table_name` DROP  Index  index_name<br></code></pre></td></tr></table></figure></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的hexo博客搭建之旅</title>
      <link href="/2019/05/16/%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E6%97%85/"/>
      <url>/2019/05/16/%E6%88%91%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<h3 id="记录一下本博客的诞生过程"><a href="#记录一下本博客的诞生过程" class="headerlink" title="记录一下本博客的诞生过程:"></a>记录一下本博客的诞生过程:</h3><ul><li><h4 id="这个博客使用的hexo博客框架，主题是ARIA"><a href="#这个博客使用的hexo博客框架，主题是ARIA" class="headerlink" title="这个博客使用的hexo博客框架，主题是ARIA"></a>这个博客使用的<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a>博客框架，主题是<a href="https://github.com/AlynxZhou/hexo-theme-aria" target="_blank" rel="noopener">ARIA</a></h4></li><li><h4 id="该博客既运行在我的VPS上，也在我的github上有备份"><a href="#该博客既运行在我的VPS上，也在我的github上有备份" class="headerlink" title="该博客既运行在我的VPS上，也在我的github上有备份"></a>该博客既运行在我的VPS上，也在我的<a href="http://git.funwan.cn/" target="_blank" rel="noopener">github</a>上有备份</h4></li></ul><hr><h3 id="下面正式开始"><a href="#下面正式开始" class="headerlink" title="下面正式开始"></a>下面正式开始</h3><ul><li><p>先安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a> , 根据你的操作系统下载比较新的版本就行。如果是Linux在用yum或者apt-get等工具下载的Nodejs，记得把npm也安装了。</p></li><li><p>然后安装hexo-cli，运行<br><code>npm install -g hexo-cli</code> 安装完成后用 <code>hexo -v</code> 查看一下版本信息</p><p><img src="http://prmmnuox9.bkt.clouddn.com/WechatIMG232.png" alt="&quot;hexo版本信息&quot;"></p></li><li><p>先初始化hexo项目: <code>hexo init hexo</code></p><p>进入刚创建的hexo项目: <code>cd hexo</code></p><p>安装hexo插件: <code>nmp install -y</code></p><p>生成hexo博客的静态文件: <code>hexo g</code></p><p><img src="http://prmmnuox9.bkt.clouddn.com/WechatIMG236.png" alt="hexo生成静态文件"></p><p>启动hexo的web服务: <code>hexo s</code></p><p><img src="http://prmmnuox9.bkt.clouddn.com/1558075917007.jpg" alt="启动hexo的web服务"></p><p>最后浏览器访问: <code>http://你的ip:4000</code>  就可以看到默认的hexo博客了</p></li><li><p>安装hexo-admin后台插件</p><p>执行: <code>npm install --save hexo-admin</code></p><p>生成hash密码:</p><p>1.执行: <code>node</code></p><p>2.再执行: <code>const bcrypt = require(&#39;bcrypt-nodejs&#39;)</code></p><p>3.最后执行: <code>bcrypt.hashSync(&#39;123456&#39;)</code><br><strong><em>(123456就是你要设置的密码)</em></strong><br><img src="http://prmmnuox9.bkt.clouddn.com/1558077450607.jpg" alt="生成hash密码"></p><p>配置后台账号信息: <code>vi _config.yml</code></p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">admin:<br>  username: bison<br>  password_hash: 2a$10$kHIDugCww1jmZMn1cQw8S.FcU/UOKuIqBEwdlseI6suqMkNsrLntu<br>  secret: bison admin<br></code></pre></td></tr></table></figure></li></ul><p>  <img src="http://prmmnuox9.bkt.clouddn.com/1558077668700.jpg" alt="配置后台用户信息"></p><p>  重新启动hexo的web服务: <code>hexo s</code></p><p>  浏览器访问:  <code>htt://你的ip:4000/admin</code> 验证</p><p>  <img src="http://prmmnuox9.bkt.clouddn.com/1558077774577.jpg" alt="hexo-admin验证"></p><hr><ul><li><p>搭配nginx使用</p><p>Centos安装Nginx:  <code>yum install nginx -y</code></p><p>Ubuntu安装Nginx: <code>apt-get install nginx</code></p><p>然后修改nginx的配置文件，指定网站根目录为hexo生成的静态文件,再nginx代理hexo-admin后台</p><p><code>vi /etc/nginx/nginx.conf</code></p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined">server &#123;<br>      listen       80;<br>      server_name  localhost;<br>      location / &#123;<br>          root   /bsBlog/hexo/public;#hexo生成静态文件的位置<br>          index  index.html index.htm;<br>      &#125;<br>      location /admin &#123;<br>          proxy_pass http://127.0.0.1:4000/admin;<br>      &#125;<br></code></pre></td></tr></table></figure><p>重启nginx: <code>systemctl restart nginx</code></p><p>开机启动nginx: <code>systemctl enable nginx</code></p><p>浏览器访问: <code>http://你的ip/admin</code> 验证</p><p><img src="http://prmmnuox9.bkt.clouddn.com/15580777745771.jpg" alt="hexo-admin验证"></p></li></ul><hr><h3 id="到此hexo博客的搭建就基本完成了，过几天再写hexo同步到github仓库和hexo更换主题的文章吧，写写大家。"><a href="#到此hexo博客的搭建就基本完成了，过几天再写hexo同步到github仓库和hexo更换主题的文章吧，写写大家。" class="headerlink" title="到此hexo博客的搭建就基本完成了，过几天再写hexo同步到github仓库和hexo更换主题的文章吧，写写大家。"></a>到此hexo博客的搭建就基本完成了，过几天再写hexo同步到github仓库和hexo更换主题的文章吧，写写大家。</h3>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
